{"version":3,"sources":["images/weightlifting-gif.gif","images/cardio2-gif.gif","images/bg-1.jpeg","components/Disclaimer/index.js","components/ConnectWalletButton/index.js","global/Status.js","abis/VotingData.js","global/reducer/votingStatusReducer.js","global/ExerciseType.js","components/Context/VotingContextProvider.js","components/VotingCards/VotingCard.js","components/VotingCards/index.js","components/Scoreboard/index.js","utils/ethereumUtils.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Disclaimer","_ref","message","react_default","a","createElement","Row","className","ConnectWalletButton","web3State","connectWalletCb","_useState","useState","_useState2","Object","slicedToArray","isHovering","setIsHovering","styles","connected","fontStyle","button","backgroundColor","color","style","account","slice","Fragment","Button","onMouseEnter","e","onMouseLeave","onClick","variant","Status","IDLE","PENDING","VOTES_LOADING","VOTES_LOADED","VOTE_ACTION_RESOLVED","CONTRACTS_LOADED","LOADING_CONTRACTS","REJECTED","FILTERED","VotingData","inputs","stateMutability","type","name","outputs","internalType","votingStatusReducer","state","action","console","log","status","votingState","error","toast","warn","position","POSITION","TOP_RIGHT","autoClose","objectSpread","success","data","endStatusCallback","Error","concat","ExerciseType","WEIGHTLIFTING","text","value","image","weightliftingGif","CARDIO","cardioGif","VotingContext","React","createContext","VotingContextProvider","votingContract","setVotingContract","_useReducer","useReducer","numWeightliftingVotes","numCardioVotes","_useReducer2","dispatch","_vote","asyncToGenerator","_regeneratorRuntime","mark","_callee3","event","chooseWeightlifting","voteFunction","wrap","_context3","prev","next","target","voteWeightlifting","voteCardio","sent","wait","then","res","loadVotes","stop","apply","this","arguments","_loadVotes","_callee4","_context4","functions","getWeightliftingVotes","getCardioVotes","useEffect","_loadVotingContract","_callee","abi","signer","contract","_context","provider","getSigner","ethers","Contract","connect","loadVotingContract","_votesInitialLoad","_callee2","_context2","votesInitialLoad","Provider","components_VotingCards","voteDisabled","voteCallback","_x","components_Scoreboard","VotingCard","objectFit","borderRadius","height","card","width","header","marginTop","marginBottom","fontFamily","fontSize","Card","key","Img","src","Header","Body","disabled","aria-label","VotingCards","exerciseTypes","_useState3","_useState4","setVoteDisabled","cardDisplay","display","justifyContent","spacer","VotingCardsUI","map","img","bg","VotingCards_VotingCard","msg","id","DisplayIfExists","Scoreboard","_useContext","useContext","loader","result","determineLeader","toString","getEthereumProvider","ethereum","providers","Web3Provider","walletIsConnected","_window","accounts","ethereumUtils_regeneratorRuntime","window","request","method","Boolean","length","abrupt","t0","connectWallet","balance","_window2","getBalance","require","config","App","setWeb3State","_handleConnectWallet","App_regeneratorRuntime","_yield$connectWallet","_yield$connectWallet2","_loadWeb3State","loadWeb3State","response","params","err","BigNumber","from","components_ConnectWalletButton","lib","components_Disclaimer","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3faa7f04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weightlifting-gif.b3731764.gif\";","module.exports = __webpack_public_path__ + \"static/media/cardio2-gif.b92a3bff.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg-1.d85eef01.jpeg\";","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Disclaimer = ({ message }) => {\n  return (\n    <Row className=\"centeralign\">\n      <h3>Disclaimer</h3>\n      <Row>\n        <p>{message}</p>\n      </Row>\n    </Row>\n  );\n};\n\nexport default Disclaimer;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ConnectWalletButton = ({ web3State, connectWalletCb }) => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleMouseEnter = (e) => {\n    setIsHovering(true);\n  };\n\n  const handleMouseLeave = (e) => {\n    setIsHovering(false);\n  };\n\n  const styles = {\n    connected: {\n      fontStyle: \"italic\",\n    },\n    button: {\n      backgroundColor: isHovering ? \"#000000\" : \"#D6DBDF\",\n      color: isHovering ? \"#FFFFFF\" : \"#000000\",\n    },\n  };\n\n  return !web3State.connected ? (\n    <>\n      <Button\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        style={styles.button}\n        onClick={connectWalletCb}\n        variant=\"primary\"\n      >\n        Connect Wallet\n      </Button>\n    </>\n  ) : (\n    <div style={styles.connected}>\n      {\" \"}\n      Wallet Connected: {web3State.account.slice(0, 3)}...\n      {web3State.account.slice(-3)}\n    </div>\n  );\n};\n\nexport default ConnectWalletButton;\n","const Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  VOTES_LOADING: \"votes loading\",\n  VOTES_LOADED: \"votes loaded\",\n  VOTE_ACTION_RESOLVED: \"vote resolved\",\n  CONTRACTS_LOADED: \"contract loaded\",\n  LOADING_CONTRACTS: \"loading contracts\",\n  REJECTED: \"rejected\",\n  FILTERED: \"filtered\",\n};\n\nexport default Status;\n","export const VotingData = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"getCardioVotes\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getWeightliftingVotes\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"voteCardio\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"voteWeightlifting\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import { toast } from \"react-toastify\";\nimport Status from \"../../global/Status\";\n\nexport function votingStatusReducer(state, action) {\n  console.log(\"votingStatusReducer --- render\");\n  switch (action.type) {\n    case Status.IDLE: {\n      console.log(\"votingStatusReducer --- status: idle\");\n      return {\n        status: Status.IDLE,\n        votingState: null,\n        error: null,\n      };\n    }\n    case Status.PENDING: {\n      console.log(\"votingStatusReducer --- status: pending\");\n      toast.warn(\"Placing vote...\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        ...state,\n        ...action.votingState,\n        status: Status.PENDING,\n        error: null,\n      };\n    }\n    case Status.VOTES_LOADING: {\n      console.log(\"votingStatusReducer --- status: votes loading\");\n      return {\n        ...state,\n        status: Status.VOTES_LOADING,\n        error: null,\n      };\n    }\n    case Status.VOTE_ACTION_RESOLVED: {\n      console.log(\"votingStatusReducer --- status: resolved\");\n      toast.success(\"Vote successful. Please wait for vote count to refresh.\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 5000,\n      });\n      return {\n        ...action.votingState,\n        status: Status.VOTE_ACTION_RESOLVED,\n        error: null,\n      };\n    }\n    case Status.VOTES_LOADED: {\n      console.log(\"votingStatusReducer --- status: votes loaded\");\n      return {\n        ...action.votingState,\n        status: Status.VOTES_LOADED,\n        error: null,\n      };\n    }\n\n    case Status.REJECTED: {\n      console.log(\n        \"VotingContextProvider --- reducer --- status: rejected\",\n        action.error\n      );\n      toast.error(\"Failed to fetch: \" + action.error, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 10000,\n      });\n      return {\n        status: Status.REJECTED,\n        data: null,\n        error: action.error,\n        endStatusCallback: state.endStatusCallback,\n      };\n    }\n    default: {\n      console.log(\"VotingContextProvider --- reducer --- should not occur\");\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import weightliftingGif from \"../images/weightlifting-gif.gif\";\nimport cardioGif from \"../images/cardio2-gif.gif\";\n\nconst ExerciseType = {\n  WEIGHTLIFTING: {\n    text: \"Weightlifting\",\n    value: \"WEIGHTLIFTING\",\n    image: weightliftingGif,\n  },\n  CARDIO: {\n    text: \"Cardio\",\n    value: \"CARDIO\",\n    image: cardioGif,\n  },\n};\n\nexport default ExerciseType;\n","import React, { useReducer, useEffect, useState } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport Status from \"../../global/Status\";\nimport { VotingData } from \"../../abis/VotingData\";\nimport { ethers } from \"ethers\";\nimport { Scoreboard, VotingCards } from \"../\";\nimport { votingStatusReducer } from \"../../global/reducer/votingStatusReducer\";\nimport ExerciseType from \"../../global/ExerciseType\";\n\nexport const VotingContext = React.createContext();\n\nexport function VotingContextProvider({ web3State }) {\n  const [votingContract, setVotingContract] = useState(null);\n  const [votingState, dispatch] = useReducer(votingStatusReducer, {\n    numWeightliftingVotes: 0,\n    numCardioVotes: 0,\n    status: Status.IDLE,\n    error: null,\n  });\n  const { WEIGHTLIFTING } = ExerciseType;\n\n  async function vote(event) {\n    dispatch({\n      type: Status.PENDING,\n      votingState,\n    });\n    const chooseWeightlifting = event.target.value === WEIGHTLIFTING.value;\n    const voteFunction = chooseWeightlifting\n      ? votingContract.voteWeightlifting\n      : votingContract.voteCardio;\n\n    const tx = await voteFunction();\n    tx.wait().then((res) => {\n      dispatch({\n        type: Status.VOTE_ACTION_RESOLVED,\n        votingState,\n      });\n      loadVotes();\n    });\n  }\n\n  async function loadVotes() {\n    dispatch({\n      type: Status.VOTES_LOADING,\n    });\n    //   const numWeightLiftingVotes = await votingContract.functions.weightliftingVotes();\n    const numWeightliftingVotes = await votingContract.functions.getWeightliftingVotes();\n    const numCardioVotes = await votingContract.functions.getCardioVotes();\n    if (!numWeightliftingVotes[0] || !numCardioVotes[0]) {\n      console.error(\"Could not fetch vote counts\");\n    }\n    const votingState = {\n      numWeightliftingVotes: numWeightliftingVotes[0],\n      numCardioVotes: numCardioVotes[0],\n    };\n\n    dispatch({\n      votingState,\n      type: Status.VOTES_LOADED,\n    });\n  }\n\n  useEffect(() => {\n    if (!web3State.provider) {\n      return;\n    }\n    // console.log(\"VotingContextProvider useEffect --- render\");\n\n    async function loadVotingContract() {\n      console.log(\"loading voting contract\");\n      const abi = VotingData;\n      const signer = web3State.provider.getSigner();\n      const contract = await new ethers.Contract(\n        \"0x87aA67600E213900bBefa67eBA46afC352c2Fc69\", //old\n        // \"0xB326177fF7884c2612f7a7cA31D8e24276d85dcd\", //new\n        abi,\n        signer\n      );\n      contract.connect();\n      setVotingContract(contract);\n    }\n\n    loadVotingContract();\n  }, [web3State.provider]);\n\n  useEffect(() => {\n    // console.log(\"VotingContextProvider useEffect -- votingState - render\");\n\n    if (!votingContract) {\n      return;\n    }\n    console.log(\"VotingContextProvider - votes initial load\");\n\n    async function votesInitialLoad() {\n      await loadVotes();\n    }\n    votesInitialLoad();\n  }, [votingContract]);\n\n  function voteDisabled() {\n    return !web3State.connected || votingState.status !== Status.VOTES_LOADED;\n  }\n\n  return (\n    <VotingContext.Provider value={[votingState, dispatch]}>\n      <Row>\n        <VotingCards\n          voteDisabled={() => voteDisabled()}\n          votingState={votingState}\n          web3State={web3State}\n          voteCallback={vote}\n        />\n      </Row>\n      <Row>\n        <Scoreboard votingState={votingState} />\n      </Row>\n    </VotingContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\n\nfunction VotingCard({ variant, voteDisabled, voteCallback }) {\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleMouseEnter = (e) => {\n    setIsHovering(true);\n  };\n\n  const handleMouseLeave = (e) => {\n    setIsHovering(false);\n  };\n  const styles = {\n    button: {\n      backgroundColor: isHovering ? \"#000000\" : \"#D6DBDF\",\n      color: isHovering ? \"#FFFFFF\" : \"#000000\",\n    },\n    image: {\n      objectFit: \"cover\",\n      borderRadius: 40,\n      height: \"80px\",\n    },\n    card: {\n      width: \"18rem\",\n    },\n    header: {\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      fontFamily: \"cursive\",\n      fontSize: \"large\",\n    },\n  };\n  return (\n    <Card\n      key={variant.value}\n      variant=\"light\"\n      style={styles.card}\n      className=\"mb-2 img-fluid\"\n    >\n      <Card.Img src={variant.image} style={styles.image} />\n      <Card.Header style={styles.header}>{variant.text}</Card.Header>\n      <Card.Body>\n        <Button\n          type=\"submit\"\n          onClick={voteCallback}\n          value={variant.value}\n          key={variant.value}\n          disabled={voteDisabled}\n          className=\"btn btn-primary btn-block btn-lg\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          style={styles.button}\n          aria-label={variant.value}\n        >\n          Vote!\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default VotingCard;\n","import React, { useState } from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport VotingCard from \"./VotingCard\";\nimport bg from \"../../images/bg-1.jpeg\";\nimport Status from \"../../global/Status\";\nimport ExerciseType from \"../../global/ExerciseType\";\nimport { useEffect } from \"react\";\n\n//TODO: create VotesTable component\nconst VotingCards = ({ votingState, web3State, voteCallback }) => {\n  const { WEIGHTLIFTING, CARDIO } = ExerciseType;\n  const [exerciseTypes] = useState([WEIGHTLIFTING, CARDIO]);\n  const [voteDisabled, setVoteDisabled] = useState(false);\n\n  function refreshGif() {}\n  useEffect(() => {\n    if (!web3State || !votingState) {\n      return;\n    }\n    const disabled = votingState.status !== Status.VOTES_LOADED;\n    setVoteDisabled(disabled);\n  }, [web3State.connected, votingState.status]);\n\n  const styles = {\n    cardDisplay: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    card: {\n      width: \"18rem\",\n    },\n    spacer: {\n      width: \"400px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  };\n\n  function VotingCardsUI() {\n    return exerciseTypes.map((variant) => (\n      <div key={variant.value} style={styles.spacer} img={bg}>\n        <VotingCard\n          variant={variant}\n          voteDisabled={voteDisabled}\n          voteCallback={voteCallback}\n        />\n      </div>\n    ));\n  }\n\n  function DisplayIfExists() {\n    const loader = (msg) => (\n      <Button variant=\"link\" id=\"loader\" className=\"text-center\">\n        {msg}\n      </Button>\n    );\n\n    switch (votingState.status) {\n      case Status.IDLE:\n        const idleDisplay = web3State.connected ? (\n          <div></div>\n        ) : (\n          <div>\n            *** Connect wallet to the Ropsten testnet to place your vote! ***\n          </div>\n        );\n        return idleDisplay;\n      case Status.PENDING:\n        return VotingCardsUI();\n      case Status.VOTES_LOADING:\n        return VotingCardsUI();\n      case Status.REJECTED:\n        throw new Error(\"Something went wrong. Please check connection.\");\n      case Status.VOTE_ACTION_RESOLVED:\n        return loader(\"Refreshing vote results...\");\n      case Status.VOTES_LOADED:\n        return VotingCardsUI();\n      default:\n        console.log(\"default case - unexpected\");\n    }\n  }\n\n  return (\n    <>\n      <Row style={styles.cardDisplay}>{DisplayIfExists()}</Row>\n    </>\n  );\n};\n\nexport default VotingCards;\n","import React, { useContext } from \"react\";\nimport { VotingContext } from \"../Context/VotingContextProvider\";\nimport Status from \"../../global/Status\";\nimport { Row, Button, Spinner } from \"react-bootstrap\";\nimport ExerciseType from \"../../global/ExerciseType\";\n\nconst Scoreboard = () => {\n  const [votingState] = useContext(VotingContext);\n  const { numWeightliftingVotes, numCardioVotes } = votingState;\n\n  function determineLeader() {\n    console.log(\"determining winner\");\n    const { WEIGHTLIFTING, CARDIO } = ExerciseType;\n    let result;\n    if (numWeightliftingVotes > numCardioVotes) {\n      result = WEIGHTLIFTING;\n    } else if (numWeightliftingVotes < numCardioVotes) {\n      result = CARDIO;\n    } else {\n      result = { text: \"Tied\", value: \"TIED\" };\n    }\n    return result.text;\n  }\n\n  function ScoreboardUI(result) {\n    return (\n      <div>\n        {/* <Row> */}\n        <h2>Leader: {result}!</h2>\n        {/* </Row> */}\n        <p>Weightlifting Votes: {numWeightliftingVotes.toString()}</p>\n        <p>Cardio Votes: {numCardioVotes.toString()}</p>\n      </div>\n    );\n  }\n\n  const styles = {\n    loader: {\n      color: \"#FFFFFF\",\n    },\n  };\n  function DisplayIfExists() {\n    const loader = (msg) => (\n      <Button\n        style={styles.loader}\n        variant=\"link\"\n        id=\"loader\"\n        className=\"text-center\"\n      >\n        {msg}\n      </Button>\n    );\n\n    switch (votingState.status) {\n      case Status.IDLE:\n        return <></>;\n      case Status.PENDING:\n        return loader(\"Updating votes...\");\n      case Status.VOTES_LOADING:\n        return loader(\"Loading votes...\");\n      case Status.REJECTED:\n        throw new Error(\"Something went wrong. Please check connection.\");\n      case Status.VOTE_ACTION_RESOLVED:\n        return loader(\"Refreshing vote results...\");\n      case Status.VOTES_LOADED:\n        return ScoreboardUI(determineLeader());\n      default:\n        console.log(\"default case - unexpected\");\n    }\n  }\n\n  return <DisplayIfExists />;\n};\n\nexport default Scoreboard;\n","import { ethers } from \"ethers\";\nimport { toast } from \"react-toastify\";\n\nfunction toEther(wei) {\n  return ethers.utils.formatEther(wei, \"Ether\");\n}\n\nfunction getEthereumProvider(ethereum) {\n  if (!ethereum) {\n    logNoWalletFound();\n    return;\n  }\n  return new ethers.providers.Web3Provider(ethereum);\n}\nfunction getSigner(provider) {\n  const signer = provider.getSigner();\n  return [provider, signer];\n}\n\nasync function walletIsConnected() {\n  console.log(\"walletIsConnected()\");\n\n  try {\n    const { ethereum } = window;\n    console.log(\"ethereum object: \", ethereum);\n    let connected, accounts;\n    if (!ethereum) {\n      connected = false;\n    } else {\n      console.log(\"getting account\");\n      accounts = await ethereum.request({ method: \"eth_accounts\" });\n      console.log(\"accounts: \", accounts);\n      connected = Boolean(accounts.length > 0);\n      console.log(\"connected: \", connected);\n      return { connected, accounts };\n      // ethereum.request({ method: \"eth_accounts\" }).then((accountResponse) => {\n      //   accounts = accountResponse;\n      //   console.log(\"accounts: \", accounts);\n      //   connected = Boolean(accounts.length > 0);\n      //   return { connected, accounts };\n      // });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n// TODO: multiple wallet extensions? open only 1\nasync function connectWallet() {\n  console.log(\"connectWallet()\");\n  let connected = false;\n  let balance = 0;\n\n  try {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.warn(\"ethereum object not found\");\n      return [null, null, connected, 0];\n    }\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    if (provider) {\n      balance = await provider.getBalance(accounts[0]);\n      connected = true;\n    }\n    return [ethereum, provider, accounts[0], connected, balance];\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n *\n * @param {number} start start block number\n * @param {number} end end block number\n * @returns range from start to end values\n */\nfunction createRange(start, end) {\n  return Array.from(Array(end - start + 1).keys()).map((x) => x + start);\n}\n\nfunction getBlockRange(start, end) {\n  return createRange(parseInt(start), parseInt(end));\n}\n\nfunction logNoWalletFound() {\n  console.warn(\"Wallet not detected. Please ensure you're connected to the Ropsten testnet.\");\n  toast.warn(\n    \"Wallet not detected. Please ensure you're connected to the Ropsten testnet.\",\n    {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 5000,\n    }\n  );\n}\n\nasync function getBlocks(start, end, web3State, dispatch) {\n  const { provider } = web3State;\n\n  if (!end || end === \"0\") {\n    end = await provider.getBlockNumber();\n    console.log(`using latest block number: ${end}`);\n  }\n\n  const promises = [];\n  const blockRange = getBlockRange(start, end);\n  blockRange.forEach((blockNum) => {\n    promises.push(provider.getBlock(blockNum));\n  });\n\n  return Promise.all(promises);\n}\n\nfunction getTxHashesFromBlocks(blocks) {\n  let hashes = [];\n  blocks.forEach((blockResponse) => {\n    if (blockResponse && blockResponse.transactions) {\n      hashes = [...hashes, ...blockResponse.transactions];\n    }\n  });\n\n  return hashes;\n}\n\nfunction getTransactionsFromBlocks(blocks = [], web3State) {\n  const { provider } = web3State;\n  if (!provider) {\n    return;\n  }\n  const hashes = getTxHashesFromBlocks(blocks);\n  const promises = [];\n\n  hashes.forEach((hash) => {\n    promises.push(provider.getTransaction(hash));\n  });\n\n  return Promise.all(promises);\n}\n\nconst mapToSenderAddress = (tx) => tx.from;\nconst mapToRecipientAddress = (tx) => tx.to;\nconst isContractCode = (c) => c === \"0x\";\n\nfunction getFromAddresses(txList) {\n  return getMappedAddresses(txList, mapToSenderAddress);\n}\n\nfunction getToAddresses(txList) {\n  return getMappedAddresses(txList, mapToRecipientAddress);\n}\n\n/**\n *\n * @param {Array} txList the list of transactions\n * @param {function} mapFunction the map function\n * @returns mapped list of addresses\n */\nfunction getMappedAddresses(txList, mapFunction) {\n  let addresses;\n  if (txList && txList.constructor === Array) {\n    addresses = txList.map(mapFunction).filter((addr) => !!addr);\n  } else {\n    addresses = [];\n  }\n  return addresses;\n}\n\n/**\n *\n * @param {Array} addresses\n * for each address, check the code to see if its a contract\n * @returns codes\n */\nasync function getAddressCodes(addresses, web3State) {\n  const { provider } = web3State;\n  if (!provider) {\n    return;\n  }\n  const codePromises = [];\n  addresses.forEach((address) => {\n    codePromises.push(provider.getCode(address));\n  });\n\n  return Promise.all(codePromises);\n}\n\nexport {\n  getEthereumProvider,\n  getSigner,\n  connectWallet,\n  getBlocks,\n  walletIsConnected,\n  getTransactionsFromBlocks,\n  getAddressCodes,\n  isContractCode,\n  getFromAddresses,\n  getToAddresses,\n  toEther,\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { BigNumber } from \"ethers\";\nimport {\n  Disclaimer,\n  ConnectWalletButton,\n  VotingContextProvider,\n} from \"./components\";\nimport {\n  connectWallet,\n  getEthereumProvider,\n  walletIsConnected,\n} from \"./utils/ethereumUtils\";\n\nrequire(\"dotenv\").config();\n\nconst App = () => {\n  console.log(\"App component -- render\");\n  const [web3State, setWeb3State] = useState({\n    ethereum: null,\n    account: null,\n    provider: null,\n    connected: false,\n    balance: 0,\n  });\n\n  useEffect(() => {\n    console.log(\"App --- useEffect() -- render\");\n    const { ethereum } = window;\n    const provider = getEthereumProvider(ethereum);\n    async function loadWeb3State() {\n      return walletIsConnected();\n    }\n    loadWeb3State().then((response) => {\n      if (!response || !response.connected || !response.accounts) {\n        return;\n      }\n\n      const { connected, accounts } = response;\n      const account = connected ? accounts[0] : null;\n      console.log(\"getting balance for: \", account);\n\n      ethereum\n        .request({\n          method: \"eth_getBalance\",\n          params: [account, \"latest\"],\n        })\n        .then((result, err) => {\n          console.log(\"result: \", result.toString());\n          const balance = result ? BigNumber.from(result.toString()) : 0;\n          console.log(\"state: \", {\n            ethereum,\n            provider,\n            account,\n            connected,\n            balance,\n          });\n          setWeb3State({\n            ethereum,\n            provider,\n            account,\n            connected,\n            balance,\n          });\n        });\n    });\n  }, []);\n\n  async function handleConnectWallet() {\n    const [\n      ethereum,\n      provider,\n      account,\n      connected,\n      balance,\n    ] = await connectWallet();\n    setWeb3State({ ethereum, provider, account, connected, balance });\n  }\n\n  const disclaimerMessage = () => {\n    const msg = `In order for this app to work successfully, you must have a Metamask wallet connected to the Ropsten testnet.`;\n    return msg;\n  };\n\n  const styles = {\n    connectButton: {\n      display: \"flex\",\n      justifyContent: \"right\",\n    },\n  };\n\n  return (\n    <>\n      {web3State && (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Row style={styles.connectButton}>\n              <ConnectWalletButton\n                web3State={web3State}\n                connectWalletCb={handleConnectWallet}\n              />\n            </Row>\n            <h1 className=\"App-title\">Blockchain Fitness Voting App</h1>\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h1 className=\"App-title\">Voting App</h1> */}\n          </header>\n          <ToastContainer />\n          <Row>\n            <VotingContextProvider web3State={web3State} />\n          </Row>\n\n          <footer className=\"App-footer\" style={{ marginTop: \"20px\" }}>\n            <Disclaimer message={disclaimerMessage()} />\n          </footer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}